import namesRouter from "../namesRouter.js";

class MenuController {
    senderName = 'menu'
    constructor() {
        this.scenes = {
            menu: {
                getText() {
                    return [
                        'HareVPN - –≤–∞—à –∫–ª—é—á—å –∫ —Å–≤–æ–±–æ–¥–µ –≤ –º–∏—Ä–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞\n',
                        '<b>–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: </b>'
                    ].join('\n');
                },
                inlineKeyboard: [
                    [{text: namesRouter.menuPay.textButton, callback_data: namesRouter.menuPay.name}],
                    [
                        {text: namesRouter.menuAccount.textButton, callback_data: namesRouter.menuAccount.name}, 
                        {text: namesRouter.menuSupport.textButton, callback_data: namesRouter.menuSupport.name}
                    ],
                    [
                        {text: namesRouter.menuPartners.textButton, callback_data: namesRouter.menuPartners.name}, 
                        {text: namesRouter.menuFriends.textButton, callback_data: namesRouter.menuFriends.name}
                    ]
                ]
            },
            pay: {
                getText() {
                    return 'üíé –ö—É–ø–∏—Ç—å –∫–ª—é—á—å';
                },
                inlineKeyboard: [
                    [{text: namesRouter.menuBack.textButton, callback_data: namesRouter.menuBack.name}]
                ]
            },
            account: {
                getText() {
                    return '‚öôÔ∏è –ú–æ–π –∞–∫–∫–∞—É–Ω—Ç';
                },
                inlineKeyboard: [
                    [{text: namesRouter.menuBack.textButton, callback_data: namesRouter.menuBack.name}]
                ]
            },
            support: {
                getText() {
                    return [
                        '<b>–û–±—Ä–∞—â–∞–µ–º –≤–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ</b>, —á—Ç–æ –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤, –≥–æ—Ç–æ–≤—ã—Ö –æ–∫–∞–∑–∞—Ç—å –≤–∞–º –ø–æ–º–æ—â—å. –ú—ã –ø—Ä–∏–ª–æ–∂–∏–º –≤—Å–µ —É—Å–∏–ª–∏—è –¥–ª—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞, —Ö–æ—Ç—è –∏–Ω–æ–≥–¥–∞ —ç—Ç–æ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.\n',
                        '<blockquote>üïõ –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ: <code>—Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–≤—Ç–µ—Ç–∞ 4-8 –º–∏–Ω—É—Ç</code></blockquote>\n',
                        '<b>–•–æ—Ç–∏—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏?</b>'
                    ].join('\n');
                },
                inlineKeyboard: [
                    [{text: namesRouter.faq.textButton, callback_data: `${namesRouter.faq.name}_${this.senderName}`}],
                    [{text: namesRouter.faqVpnConnect.textButton, callback_data: `${namesRouter.faqVpnConnect.name}_${this.senderName}`}],
                    [
                        {text: namesRouter.menuBack.textButton, callback_data: namesRouter.menuBack.name}, 
                        {text: '‚úÖ –î–∞', callback_data: '0'}
                    ]
                ]
            },
            friends: {
                getText() {
                    return 'üéÅ VPN –î—Ä—É–≥—É';
                },
                inlineKeyboard: [
                    [{text: namesRouter.menuBack.textButton, callback_data: namesRouter.menuBack.name}]
                ]
            },
            key: {
                getText() {
                    return '–ö–ª—é—á–∏';
                },
                inlineKeyboard: [
                    [{text: namesRouter.menuBack.textButton, callback_data: namesRouter.menuBack.name}]
                ]
            },
            partners: {
                getText() {
                    return 'ü§ù –ü–∞—Ä—Ç–Ω–µ—Ä–∞–º';
                },
                inlineKeyboard: [
                    [{text: namesRouter.menuBack.textButton, callback_data: namesRouter.menuBack.name}]
                ]
            }
        }
        this.routers = new Map([
            [namesRouter.keyCommand.name, this.scenes.key],
            [namesRouter.payCommand.name, this.scenes.pay],
            [namesRouter.menuCommand.name, this.scenes.menu],
            [namesRouter.accountCommand.name, this.scenes.account],
            [namesRouter.friendsCommand.name, this.scenes.friends],
            [namesRouter.supportCommand.name, this.scenes.support],
            [namesRouter.menu.name, this.scenes.menu],
            [namesRouter.menuPay.name, this.scenes.pay],
            [namesRouter.menuAccount.name, this.scenes.account],
            [namesRouter.menuFriends.name, this.scenes.friends],
            [namesRouter.menuSupport.name, this.scenes.support],
            [namesRouter.menuPartners.name, this.scenes.partners],
            [namesRouter.menuBack.name, this.scenes.menu]
        ])
    }

    getScene(name) {
        return this.routers.get(name);
    }
}

export default MenuController;