import namesRouter from "../namesRouter.js";

class StartController {
    senderName = 'start'

    constructor() {
        const controller = this;

        this.scenes = {
            start: {
                getText(faqLinks) {
                    return [
                        '<b>Hare VPN üê∞</b> - –ê–Ω–æ–Ω–∏–º–Ω—ã–π –∏ –±—ã—Å—Ç—Ä—ã–π VPN —Å–≤–æ–±–æ–¥–Ω—ã–π –¥–æ—Å—Ç—É–ø –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–∞ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö: –±—É–¥—å —Ç–æ iOS, Android, Mac, Windows –∏–ª–∏ TV.\n',
                        '<blockquote><b>–õ–µ–≥–∫–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ç—Ä–∏ —à–∞–≥–∞:</b>\n‚îú –ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á—å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏\n‚îú –°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n‚îî –í—Å—Ç–∞–≤–∏—Ç—å –∫–ª—é—á –∞–∫—Ç–∏–≤–∞—Ü–∏–∏</blockquote>\n',
                        faqLinks,
                    ].join('\n');
                },
                inlineKeyboard: [
                    [{text: namesRouter.trialKey.textButton, callback_data: `${namesRouter.trialKey.name}_${this.senderName}`}],
                    [{text: namesRouter.menuPay.textButton, callback_data: `${namesRouter.payCommand.name}_${this.senderName}`}]
                ]
            },
            trialKey: {
                getText() {
                    return 'üç≠ –ü—Ä–æ–±–Ω—ã–π –∫–ª—é—á—å';
                },
                inlineKeyboard: []
            }
        }
        this.routers = new Map([
            [namesRouter.startCommand.name, this.scenes.start],
            [namesRouter.trialKey.name, this.scenes.trialKey]
        ])
    }

    getScene(name) {
        return this.routers.get(name);
    }
}

export default StartController;